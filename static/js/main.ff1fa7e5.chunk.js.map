{"version":3,"sources":["components/Form.js","components/Table2.js","components/Table1.js","App.js","reportWebVitals.js","index.js"],"names":["FormInput","arrays","setArrays","useState","input","setInput","Form","onSubmit","e","preventDefault","newArray","push","id","length","name","quantity","rating","button","show","Group","controlId","Label","Control","value","onChange","target","type","placeholder","Button","variant","Table2","striped","bordered","hover","map","obj","Table1","incrementQuantity","decrementQuantity","incrementRating","decrementRating","lineStrike","index","Fragment","className","onClick","style","width","padding","App","setQuantity","setRating","setShow","newArrays1","newArrays2","newArrays3","newArrays4","newArrays5","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff1fa7e5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst FormInput = ({ arrays, setArrays }) => {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const formSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newArray = arrays;\r\n    if (input) {\r\n      newArray.push({\r\n        id: arrays.length + 1,\r\n        name: input,\r\n        quantity: 0,\r\n        rating: 0,\r\n        button: true,\r\n        show: true,\r\n      });\r\n    }\r\n    setArrays([...newArray]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={formSubmit}>\r\n        <Form.Group controlId=\"formBasicText\">\r\n          <Form.Label>\r\n            <h4>Shopping List with Counter</h4>\r\n          </Form.Label>\r\n          <Form.Control\r\n            value={input}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Enter Item Name\"\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Add\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\nexport default FormInput;\r\n","import React from \"react\";\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\n\r\nconst Table2 = ({ arrays }) => {\r\n  return (\r\n    <div>\r\n      <ReactBootStrap.Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Shopping Card</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {arrays.map((obj) => {\r\n            if (obj.quantity > 0 && obj.show) {\r\n              return (\r\n                <tr key={obj.id}>\r\n                  <td>\r\n                    {obj.quantity} kg {obj.name}({obj.rating})\r\n                  </td>\r\n                </tr>\r\n              );\r\n            }\r\n          })}\r\n        </tbody>\r\n      </ReactBootStrap.Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table2;\r\n","import React from \"react\";\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport reactDom from \"react-dom\";\r\nimport QuantityCounter from \"./QuantityCounter\";\r\nimport RatingCounter from \"./RatingCounter\";\r\nimport Table2 from \"./Table2\";\r\nconst Table1 = ({\r\n  arrays,\r\n  incrementQuantity,\r\n  decrementQuantity,\r\n  incrementRating,\r\n  decrementRating,\r\n  lineStrike,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <ReactBootStrap.Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th> Name</th>\r\n            <th>Quantity</th>\r\n            <th>Rating</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {arrays.map((obj, index) => {\r\n            return (\r\n              <React.Fragment>\r\n                <tr className={obj.show ? null : \"selected\"} key={obj.id}>\r\n                  <td>{obj.id}</td>\r\n                  <td>{obj.name}</td>\r\n                  <td>\r\n                    <button onClick={() => incrementQuantity(index)}>+</button>\r\n                    {obj.quantity}\r\n                    <button\r\n                      onClick={\r\n                        obj.quantity > 0 ? () => decrementQuantity(index) : null\r\n                      }\r\n                    >\r\n                      -\r\n                    </button>\r\n                  </td>\r\n                  <td>\r\n                    <button onClick={() => incrementRating(index)}>+</button>\r\n                    {obj.rating}\r\n                    <button\r\n                      onClick={\r\n                        obj.rating > 0 ? () => decrementRating(index) : null\r\n                      }\r\n                    >\r\n                      -\r\n                    </button>\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      variant={obj.button ? \"danger\" : \"primary\"}\r\n                      style={{ width: \"75px\", padding: \"3px\" }}\r\n                      onClick={() => lineStrike(index)}\r\n                    >\r\n                      {obj.button ? \"Dismiss\" : \"Admit\"}\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </ReactBootStrap.Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table1;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport FormInput from \"./components/Form\";\nimport Table1 from \"./components/Table1\";\nimport Table2 from \"./components/Table2\";\n\nconst App = () => {\n  const [quantity, setQuantity] = useState(0);\n  const [rating, setRating] = useState(0);\n  const [show, setShow] = useState(true);\n  const [arrays, setArrays] = useState([\n    {\n      id: 1,\n      name: \"Apple\",\n      quantity: 0,\n      rating: 0,\n      button: true,\n      show: true,\n    },\n  ]);\n\n  const incrementQuantity = (index) => {\n    setQuantity(quantity + 1);\n    const newArrays1 = arrays;\n    newArrays1[index].quantity = newArrays1[index].quantity + 1;\n    setArrays(newArrays1);\n  };\n\n  const decrementQuantity = (index) => {\n    setQuantity(quantity - 1);\n    const newArrays2 = arrays;\n    newArrays2[index].quantity = newArrays2[index].quantity - 1;\n    setArrays(newArrays2);\n  };\n\n  const incrementRating = (index) => {\n    setRating(rating + 1);\n    const newArrays3 = arrays;\n    newArrays3[index].rating = newArrays3[index].rating + 1;\n    setArrays(newArrays3);\n  };\n\n  const decrementRating = (index) => {\n    setRating(rating - 1);\n    const newArrays4 = arrays;\n    newArrays4[index].rating = newArrays4[index].rating - 1;\n    setArrays(newArrays4);\n  };\n\n  const lineStrike = (index) => {\n    setShow(!show);\n    let newArrays5 = arrays;\n    newArrays5[index].show = !newArrays5[index].show;\n    newArrays5[index].button = !newArrays5[index].button;\n    setArrays(newArrays5);\n  };\n  return (\n    <div className=\"App\">\n      <FormInput arrays={arrays} setArrays={setArrays} />\n      <br />\n      <Table1\n        arrays={arrays}\n        incrementQuantity={incrementQuantity}\n        decrementQuantity={decrementQuantity}\n        incrementRating={incrementRating}\n        decrementRating={decrementRating}\n        lineStrike={lineStrike}\n      />\n      <br />\n      <Table2 arrays={arrays} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}